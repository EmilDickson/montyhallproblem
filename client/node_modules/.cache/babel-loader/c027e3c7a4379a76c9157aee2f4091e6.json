{"ast":null,"code":"var _jsxFileName = \"/Users/emildickson/Documents/Programmering_lokalt/monty-hall-problem/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { Button } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Results from \"./components/Results\";\nimport GameTable from \"./components/GameTable\";\nimport Info from \"./components/Info\";\nimport Images from \"./components/Images\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#4F4F4F\"\n    },\n    secondary: {\n      main: \"#CE8147\"\n    }\n  }\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: null,\n      numberOfSimulations: 1,\n      numberInputError: false,\n      switchDoors: false,\n      loading: false,\n      windowWidth: window.innerWidth\n    };\n  }\n\n  checkSimulationInput(event) {\n    const newValue = event.target.value; // Checks so that input is a number, non-negative, not zero and not infinity\n\n    if (isNaN(newValue) || newValue < 1 || newValue.includes(\"e\")) {\n      this.setState({\n        numberInputError: true\n      });\n    } else {\n      this.setState({\n        numberOfSimulations: parseInt(newValue),\n        numberInputError: false\n      });\n    }\n  }\n\n  runSimulations() {\n    this.setState({\n      loading: true\n    });\n    fetch(\"http://localhost:9000/results\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      },\n      body: JSON.stringify({\n        numberOfSimulations: this.state.numberOfSimulations,\n        switchDoors: this.state.switchDoors\n      })\n    }).then(res => res.json()).then(results => this.setState({\n      apiResponse: results,\n      loading: false\n    })).catch(err => {\n      this.setState({\n        loading: false\n      });\n      alert(err);\n    });\n  }\n\n  updateWindowDimensions() {\n    this.setState({\n      windowWidth: window.innerWidth\n    });\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      position: \"sticky\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, \"Monty Hall Simulator\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Images, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Info, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: this.state.switchDoors,\n        onChange: () => this.setState({\n          switchDoors: !this.state.switchDoors\n        }),\n        name: \"switchDoorsCheck\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 37\n        }\n      }),\n      label: \"Switch doors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: this.state.numberInputError,\n      id: \"number-input\",\n      label: \"Number of simulations\",\n      defaultValue: this.state.numberOfSimulations,\n      helperText: this.state.numberInputError ? \"Incorrect entry.\" : null,\n      onChange: e => this.checkSimulationInput(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      disabled: this.state.numberInputError || this.state.loading,\n      onClick: () => this.runSimulations(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, this.state.loading ? \"Loading results\" : \"Run simulations\"), /*#__PURE__*/React.createElement(Results, {\n      results: this.state.apiResponse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }), this.state.apiResponse && this.state.windowWidth > 423 ? /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }\n    }, \"All games:\") : null, /*#__PURE__*/React.createElement(GameTable, {\n      results: this.state.apiResponse,\n      windowWidth: this.state.windowWidth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/emildickson/Documents/Programmering_lokalt/monty-hall-problem/client/src/App.js"],"names":["React","Component","createMuiTheme","ThemeProvider","Button","FormControlLabel","TextField","Checkbox","AppBar","Toolbar","Typography","Results","GameTable","Info","Images","theme","palette","primary","main","secondary","App","constructor","props","state","apiResponse","numberOfSimulations","numberInputError","switchDoors","loading","windowWidth","window","innerWidth","checkSimulationInput","event","newValue","target","value","isNaN","includes","setState","parseInt","runSimulations","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","results","catch","err","alert","updateWindowDimensions","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","e"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { Button } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Results from \"./components/Results\";\nimport GameTable from \"./components/GameTable\";\nimport Info from \"./components/Info\";\nimport Images from \"./components/Images\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#4F4F4F\",\n        },\n        secondary: {\n            main: \"#CE8147\",\n        },\n    },\n});\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apiResponse: null,\n            numberOfSimulations: 1,\n            numberInputError: false,\n            switchDoors: false,\n            loading: false,\n            windowWidth: window.innerWidth,\n        };\n    }\n\n    checkSimulationInput(event) {\n        const newValue = event.target.value;\n        // Checks so that input is a number, non-negative, not zero and not infinity\n        if (isNaN(newValue) || newValue < 1 || newValue.includes(\"e\")) {\n            this.setState({\n                numberInputError: true,\n            });\n        } else {\n            this.setState({\n                numberOfSimulations: parseInt(newValue),\n                numberInputError: false,\n            });\n        }\n    }\n\n    runSimulations() {\n        this.setState({ loading: true });\n        fetch(\"http://localhost:9000/results\", {\n            method: \"post\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json; charset=utf-8\",\n            },\n            body: JSON.stringify({\n                numberOfSimulations: this.state.numberOfSimulations,\n                switchDoors: this.state.switchDoors,\n            }),\n        })\n            .then((res) => res.json())\n            .then((results) =>\n                this.setState({ apiResponse: results, loading: false })\n            )\n            .catch((err) => {\n                this.setState({ loading: false });\n                alert(err);\n            });\n    }\n\n    updateWindowDimensions() {\n        this.setState({ windowWidth: window.innerWidth });\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    render() {\n        return (\n            <ThemeProvider theme={theme}>\n                <div className='App'>\n                    <AppBar position='sticky' color='primary'>\n                        <Toolbar>\n                            <Typography variant='h6'>\n                                Monty Hall Simulator\n                            </Typography>\n                        </Toolbar>\n                    </AppBar>\n                    <div className='mainContainer'>\n                        <Images />\n                        <Info />\n                        <div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={this.state.switchDoors}\n                                        onChange={() =>\n                                            this.setState({\n                                                switchDoors: !this.state\n                                                    .switchDoors,\n                                            })\n                                        }\n                                        name='switchDoorsCheck'\n                                    />\n                                }\n                                label='Switch doors'\n                            />\n                            <TextField\n                                error={this.state.numberInputError}\n                                id='number-input'\n                                label='Number of simulations'\n                                defaultValue={this.state.numberOfSimulations}\n                                helperText={\n                                    this.state.numberInputError\n                                        ? \"Incorrect entry.\"\n                                        : null\n                                }\n                                onChange={(e) => this.checkSimulationInput(e)}\n                            />\n                        </div>\n                        <Button\n                            variant='contained'\n                            color='secondary'\n                            disabled={\n                                this.state.numberInputError ||\n                                this.state.loading\n                            }\n                            onClick={() => this.runSimulations()}\n                        >\n                            {this.state.loading\n                                ? \"Loading results\"\n                                : \"Run simulations\"}\n                        </Button>\n                        <Results results={this.state.apiResponse} />\n                        {this.state.apiResponse &&\n                        this.state.windowWidth > 423 ? (\n                            <Typography variant='h6'>All games:</Typography>\n                        ) : null}\n                        <GameTable\n                            results={this.state.apiResponse}\n                            windowWidth={this.state.windowWidth}\n                        />\n                    </div>\n                </div>\n            </ThemeProvider>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}