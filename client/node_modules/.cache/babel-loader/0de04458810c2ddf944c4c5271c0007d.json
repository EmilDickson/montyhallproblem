{"ast":null,"code":"var _jsxFileName = \"/Users/emildickson/Documents/Programmering_lokalt/monty-hall-problem/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport monty from \"./images/Monty_hall.png\";\nimport \"./App.css\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { Button } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Results from \"./components/Results\";\nimport GameTable from \"./components/GameTable\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#4F4F4F\"\n    },\n    secondary: {\n      main: \"#CE8147\"\n    }\n  }\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: null,\n      numberOfSimulations: 1,\n      numberInputError: false,\n      switchDoors: false,\n      loading: false\n    };\n  }\n\n  checkSimulationInput(event) {\n    const newValue = event.target.value;\n\n    if (isNaN(newValue)) {\n      this.setState({\n        numberInputError: true\n      });\n    } else {\n      this.setState({\n        numberOfSimulations: parseInt(newValue),\n        numberInputError: false\n      });\n    }\n  }\n\n  runSimulations() {\n    this.setState({\n      loading: true\n    });\n    fetch(\"http://localhost:9000/results\", {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json; charset=utf-8'\n      },\n      body: JSON.stringify({\n        numberOfSimulations: this.state.numberOfSimulations,\n        switchDoors: this.state.switchDoors\n      })\n    }).then(res => res.json()).then(results => this.setState({\n      apiResponse: results,\n      loading: false\n    })).catch(err => {\n      this.setState({\n        loading: false\n      });\n      alert(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      position: \"sticky\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, \"Monty Hall Simulator\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"images\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: monty,\n      alt: \"Monty Hall\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"Define the number of simulations to run and whether to switch doors after having them opened the first time.\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: this.state.switchDoors,\n        onChange: () => this.setState({\n          switchDoors: !this.state.switchDoors\n        }),\n        name: \"switchDoorsCheck\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 33\n        }\n      }),\n      label: \"Switch doors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: this.state.numberInputError,\n      id: \"number-input\",\n      label: \"Number of simulations\",\n      defaultValue: this.state.numberOfSimulations,\n      helperText: this.state.numberInputError ? 'Incorrect entry.' : null,\n      onChange: e => this.checkSimulationInput(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      disabled: this.state.numberInputError || this.state.loading,\n      onClick: () => this.runSimulations(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, this.state.loading ? 'Loading results' : 'Run simulations'), /*#__PURE__*/React.createElement(Results, {\n      results: this.state.apiResponse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }), this.state.apiResponse ? /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 47\n      }\n    }, \"All games:\") : null, /*#__PURE__*/React.createElement(GameTable, {\n      results: this.state.apiResponse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/emildickson/Documents/Programmering_lokalt/monty-hall-problem/client/src/App.js"],"names":["React","Component","monty","createMuiTheme","ThemeProvider","Button","FormControlLabel","TextField","Checkbox","AppBar","Toolbar","Typography","Results","GameTable","theme","palette","primary","main","secondary","App","constructor","props","state","apiResponse","numberOfSimulations","numberInputError","switchDoors","loading","checkSimulationInput","event","newValue","target","value","isNaN","setState","parseInt","runSimulations","fetch","method","headers","body","JSON","stringify","then","res","json","results","catch","err","alert","render","e"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport monty from \"./images/Monty_hall.png\";\nimport \"./App.css\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { Button } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Results from \"./components/Results\";\nimport GameTable from \"./components/GameTable\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#4F4F4F\",\n        },\n        secondary: {\n            main: \"#CE8147\",\n        },\n    },\n});\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apiResponse: null,\n            numberOfSimulations: 1,\n            numberInputError: false,\n            switchDoors: false,\n            loading: false,\n        };\n    }\n\n    checkSimulationInput(event) {\n      const newValue = event.target.value;\n      if (isNaN(newValue)) {\n        this.setState({\n          numberInputError: true,\n        });\n      } else {\n        this.setState({\n          numberOfSimulations: parseInt(newValue),\n          numberInputError: false,\n        });\n      }\n    }\n\n    runSimulations() {\n      this.setState({ loading: true })\n      fetch(\"http://localhost:9000/results\", {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json; charset=utf-8',\n        },\n        body: JSON.stringify({\n          numberOfSimulations: this.state.numberOfSimulations,\n          switchDoors: this.state.switchDoors\n        })\n      })\n      .then(res => res.json())\n      .then(results => this.setState({ apiResponse: results, loading: false }))\n      .catch((err) => {\n        this.setState({ loading: false })\n        alert(err)\n      });\n    }\n\n    render() {\n        return (\n            <ThemeProvider theme={theme}>\n                <div className='App'>\n                    <AppBar position='sticky' color='primary'>\n                        <Toolbar>\n                            <Typography variant='h6'>\n                                Monty Hall Simulator\n                            </Typography>\n                        </Toolbar>\n                    </AppBar>\n                    <div className='images'>\n                        <img src={monty} alt='Monty Hall' />\n                    </div>\n                    <Typography>\n                        Define the number of simulations to run and whether to\n                        switch doors after having them opened the first time.\n                    </Typography>\n                    <div>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.switchDoors}\n                                    onChange={() =>\n                                        this.setState({\n                                            switchDoors: !this.state\n                                                .switchDoors,\n                                        })\n                                    }\n                                    name='switchDoorsCheck'\n                                />\n                            }\n                            label='Switch doors'\n                        />\n                        <TextField\n                            error={this.state.numberInputError}\n                            id='number-input'\n                            label='Number of simulations'\n                            defaultValue={this.state.numberOfSimulations}\n                            helperText={this.state.numberInputError ? 'Incorrect entry.' : null}\n                            onChange={e => this.checkSimulationInput(e)}\n                        />\n                    </div>\n                    <Button variant='contained' color='secondary' disabled={this.state.numberInputError || this.state.loading} onClick={() => this.runSimulations()}>\n                        {this.state.loading ? 'Loading results' : 'Run simulations'}\n                    </Button>\n                    <Results results={this.state.apiResponse} />\n                    {this.state.apiResponse ? <Typography variant=\"h6\">All games:</Typography> : null}\n                    <GameTable results={this.state.apiResponse} />\n                </div>\n            </ThemeProvider>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}