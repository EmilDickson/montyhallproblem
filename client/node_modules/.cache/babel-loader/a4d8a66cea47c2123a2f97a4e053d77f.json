{"ast":null,"code":"var _jsxFileName = \"/Users/emildickson/Documents/Programmering_lokalt/monty-hall-problem/client/src/components/GameTable.js\";\nimport React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst createData = (gameNo, door1, door2, door3, selected, result) => ({\n  gameNo,\n  door1,\n  door2,\n  door3,\n  selected,\n  result\n});\n\nconst GameTable = props => {\n  let games = [];\n\n  if (props.results) {\n    for (let i = 0; i < props.results.games.length; i++) {\n      const game = props.results.games[i];\n      games.push(createData(i + 1, game.doors[0].car ? \"Car\" : \"Goat\", game.doors[1].car ? \"Car\" : \"Goat\", game.doors[2].car ? \"Car\" : \"Goat\", \"Door \" + game.selectedDoor, game.win ? \"Won car\" : \"Won goat\"));\n    }\n  }\n\n  const customTableStyle = {\n    width: '16%'\n  };\n  return props.results ? /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Game no. \"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"Door 1\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Door 2\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Door 3\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Initially selected\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Result\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, games.map(game => /*#__PURE__*/React.createElement(TableRow, {\n    key: game.gameNo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, game.gameNo), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, game.door1), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, game.door2), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, game.door3), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, game.selected), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, game.result))))) : null;\n};\n\nexport default GameTable;","map":{"version":3,"sources":["/Users/emildickson/Documents/Programmering_lokalt/monty-hall-problem/client/src/components/GameTable.js"],"names":["React","Table","TableBody","TableCell","TableHead","TableRow","createData","gameNo","door1","door2","door3","selected","result","GameTable","props","games","results","i","length","game","push","doors","car","selectedDoor","win","customTableStyle","width","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst createData = (gameNo, door1, door2, door3, selected, result) => ({\n    gameNo,\n    door1,\n    door2,\n    door3,\n    selected,\n    result,\n});\n\nconst GameTable = (props) => {\n    let games = [];\n    if (props.results) {\n        for (let i = 0; i < props.results.games.length; i++) {\n            const game = props.results.games[i];\n            games.push(\n                createData(\n                    i + 1,\n                    game.doors[0].car ? \"Car\" : \"Goat\",\n                    game.doors[1].car ? \"Car\" : \"Goat\",\n                    game.doors[2].car ? \"Car\" : \"Goat\",\n                    \"Door \" + game.selectedDoor,\n                    game.win ? \"Won car\" : \"Won goat\"\n                )\n            );\n        }\n    }\n\n    const customTableStyle = { width: '16%' };\n\n    return props.results ? (\n        <Table>\n            <TableHead>\n                <TableRow>\n                    <TableCell>Game no. </TableCell>\n                    <TableCell align='right'>Door 1</TableCell>\n                    <TableCell align='right'>Door 2</TableCell>\n                    <TableCell align='right'>Door 3</TableCell>\n                    <TableCell align='right'>Initially selected</TableCell>\n                    <TableCell align='right'>Result</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {games.map(game => (\n                    <TableRow key={game.gameNo}>\n                        <TableCell component=\"th\" scope=\"row\">\n                            {game.gameNo}\n                        </TableCell>\n                        <TableCell align=\"right\">{game.door1}</TableCell>\n                        <TableCell align=\"right\">{game.door2}</TableCell>\n                        <TableCell align=\"right\">{game.door3}</TableCell>\n                        <TableCell align=\"right\">{game.selected}</TableCell>\n                        <TableCell align=\"right\">{game.result}</TableCell>\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n    ) : null;\n};\n\nexport default GameTable;\n"]},"metadata":{},"sourceType":"module"}