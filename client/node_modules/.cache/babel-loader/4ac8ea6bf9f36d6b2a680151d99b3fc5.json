{"ast":null,"code":"var _jsxFileName = \"/Users/emildickson/Documents/Programmering_lokalt/monty-hall-problem/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport monty from \"./images/Monty_hall.png\";\nimport \"./App.css\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { Button } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#4F4F4F\"\n    },\n    secondary: {\n      main: \"#CE8147\"\n    }\n  }\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: null,\n      numberOfSimulations: 1,\n      numberInputError: false,\n      switchDoors: false\n    };\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:9000/testAPI\").then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    })).catch(err => err);\n  }\n\n  componentDidMount() {\n    this.callAPI();\n  }\n\n  checkSimulationInput(event) {\n    const newValue = event.target.value;\n    console.log(parseInt(newValue));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      position: \"sticky\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, \"Monty Hall Simulator\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"images\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: monty,\n      alt: \"Monty Hall\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, \"Define the number of simulations to run and whether to switch doors after having them opened the first time.\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: this.state.switchDoors,\n        onChange: () => this.setState({\n          switchDoors: !this.state.switchDoors\n        }),\n        name: \"switchDoorsCheck\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }\n      }),\n      label: \"Switch doors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: this.state.numberInputError,\n      id: \"number-input\",\n      label: \"Number of simulations\",\n      defaultValue: this.state.numberOfSimulations,\n      helperText: this.state.numberInputError ? 'Incorrect entry.' : null,\n      onChange: e => this.checkSimulationInput(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, \"Run simulations\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, \"Results\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"Table with simulations\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/emildickson/Documents/Programmering_lokalt/monty-hall-problem/client/src/App.js"],"names":["React","Component","monty","createMuiTheme","ThemeProvider","Button","FormControlLabel","TextField","Checkbox","AppBar","Toolbar","Typography","theme","palette","primary","main","secondary","App","constructor","props","state","apiResponse","numberOfSimulations","numberInputError","switchDoors","callAPI","fetch","then","res","text","setState","catch","err","componentDidMount","checkSimulationInput","event","newValue","target","value","console","log","parseInt","render","e"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport monty from \"./images/Monty_hall.png\";\nimport \"./App.css\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { Button } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#4F4F4F\",\n        },\n        secondary: {\n            main: \"#CE8147\",\n        },\n    },\n});\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apiResponse: null,\n            numberOfSimulations: 1,\n            numberInputError: false,\n            switchDoors: false,\n        };\n    }\n\n    callAPI() {\n        fetch(\"http://localhost:9000/testAPI\")\n            .then((res) => res.text())\n            .then((res) => this.setState({ apiResponse: res }))\n            .catch((err) => err);\n    }\n\n    componentDidMount() {\n        this.callAPI();\n    }\n\n    checkSimulationInput(event) {\n      const newValue = event.target.value;\n      console.log(parseInt(newValue));\n    }\n\n    render() {\n        return (\n            <ThemeProvider theme={theme}>\n                <div className='App'>\n                    <AppBar position='sticky' color='primary'>\n                        <Toolbar>\n                            <Typography variant='h6'>\n                                Monty Hall Simulator\n                            </Typography>\n                        </Toolbar>\n                    </AppBar>\n                    <div className='images'>\n                        <img src={monty} alt='Monty Hall' />\n                    </div>\n                    <Typography>\n                        Define the number of simulations to run and whether to\n                        switch doors after having them opened the first time.\n                    </Typography>\n                    <div>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={this.state.switchDoors}\n                                    onChange={() =>\n                                        this.setState({\n                                            switchDoors: !this.state\n                                                .switchDoors,\n                                        })\n                                    }\n                                    name='switchDoorsCheck'\n                                />\n                            }\n                            label='Switch doors'\n                        />\n                        <TextField\n                            error={this.state.numberInputError}\n                            id='number-input'\n                            label='Number of simulations'\n                            defaultValue={this.state.numberOfSimulations}\n                            helperText={this.state.numberInputError ? 'Incorrect entry.' : null}\n                            onChange={e => this.checkSimulationInput(e)}\n                        />\n                    </div>\n                    <Button variant='contained' color='secondary'>\n                        Run simulations\n                    </Button>\n                    <div>Results</div>\n                    <div>Table with simulations</div>\n                </div>\n            </ThemeProvider>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}